<%def name="defs()">
%% end verbatim - this comment is a hack to prevent texinfo.tex
%% from choking on non-European UTF-8 subsets

%% this version tag will keep me compiling only on this version of lilypond.
%%=====================================================================
<%
	import datetime # for datetime.now().strftime()
	import os # for getuid
	import pwd # for getpwuid
	import socket # for gethostname
	import subprocess # for subprocess.check_output

	attributes['lilyver']='2.16.0'
	attributes['date']=datetime.datetime.now().strftime('%T %d-%m-%Y')
	attributes['year']=datetime.datetime.now().strftime('%Y')
	attributes['username']=pwd.getpwuid(os.getuid())[0]
	attributes['gittag']=subprocess.check_output(['git','describe','--abbrev=0']).strip()
	attributes['gitdesc']=subprocess.check_output(['git','describe','--tags']).strip()
	attributes['gitcommits']=subprocess.check_output(['git','log','--pretty=format:\'\'']).split('\n').__len__()
	attributes['hostname']=socket.gethostname()
	attributes['machine']=os.uname()[0]+' '+os.uname()[2]
%>
\version "${attributes['lilyver']}"

%% lets define a variable to hold the formatted build date (man 3 strftime):
%%date=#(strftime "%T %d-%m-%Y" (localtime (current-time)))
%%lilyver=#(lilypond-version)

%% setting instruments for midi generation (bah - this doesn't work...)
%%=====================================================================
%%\set ChordNames.midiInstrument = #"acoustic grand"
%%\set Staff.midiInstrument = #"flute"
%%\set PianoStaff.instrumentName = #"acoustic grand"
%% do not show chords unless they change...
%%\set chordChanges = ##t

%% number of staffs per page (this does not work because of my breaks)
%%\paper {
%%	system-count = #7
%%}

\paper {
	%% reduce spaces between systems and the bottom (taken from the lilypond
	%% documentation and found the relevant variable)
	%% the result of this is that I can fit 8 single staffs in one page
	%% which is ideal for Jazz (think 32 bar divided into 8 lines of 4 bars each...).
	%% I should really only apply this thing for Jazz tunes but that is a TODO item.
	%% default is 4\mm - 3 already causes 8 staffs to take 2 pages
	between-system-padding = 2\mm
	%% default is 20\mm
	%% between-system-space = 16\mm
	%% ragged-last-bottom = ##f
	%% ragged-bottom = ##f

	%% make lilypond increase the distance of the footer from the bottom of the page
	%% it seems that if you don't do something like this you're going to have
	%% a real problem seeing the footer in postscript printing....
	%%bottom-margin = 2.5\cm

	%% from /usr/share/lilypond/2.12.3/ly/titling-init.ly
	%% to stop lilypond from printing footers...
	oddFooterMarkup = \markup {}

	%% prevent lilypond from printing the headers...

	scoreTitleMarkup = \markup {}
	bookTitleMarkup = \markup {}
}
\layout {
	%% don't have the fist line indented
	indent = 0.0 \cm
	%% don't know what this is (taken from Laurent Martelli...)
	%%textheight = 1.5\cm

	\context {
		\Score
		%% change the size of the text fonts
		%%\override LyricText #'font-family = #'typewriter
		\override LyricText #'font-size = #'-2

		%% set the style of the chords to Jazz - I don't see this making any effect
		\override ChordName #'style = #'jazz
		%%\override ChordName #'word-space = #2

		%% set the chord size and font
		%%\override ChordName #'font-series = #'bold
		%%\override ChordName #'font-family = #'roman
		%%\override ChordName #'font-size = #-1

		%% don't show bar numbers (for jazz it makes it too cluttery)
		\remove "Bar_number_engraver"
	}
}
%% reduce the font size (taken from the lilypond info documentation, default is 20)
#(set-global-staff-size 17.82)

%% There is no need to set the paper size to a4 since it is the default.
%% make lilypond use paper of size a4 (Is this the default ?!?)
%%#(set-default-paper-size "a4")
%%)

%% chord related matters
myChordDefinitions={
	<c ees ges bes des' fes' aes'>-\markup \super {7alt}
	<c e g bes f'>-\markup \super {7sus}
}
myChordExceptions=#(append
	(sequential-music-to-chord-exceptions myChordDefinitions #t)
	ignatzekExceptions
)

%% some macros to be reused all over
%% =====================================================================
myBreak=\break
%% do line breaks really matter?
myEndLine=\break
%%myEndLine={}
myEndLineVoltaNotLast={}
myEndLineVoltaLast=\break
partBar=\bar "||"
endBar=\bar "|."
startBar=\bar ".|"
startRepeat=\bar "|:"
endRepeat=\bar ":|"
startTune={}
endTune=\bar "|."
myFakeEndLine={}

%% some functions to be reused all over
%% =====================================================================
%% A wrapper for section markers that allows us to control their formatting
myMark =
#(define-music-function
     (parser location mark)
     (markup?)
   #{
     \mark \markup { \circle #mark }
   #})

%% this is a macro that * really * breaks lines. You don't really need this since a regular \break will work
%% AS LONG AS you have the '\remove Bar_engraver' enabled...
hardBreak={ \bar "" \break }
%% a macro to make vertical space
verticalSpace=\markup { \null }

%% some macros for marking parts of jazz tunes
%% =====================================================================
startSong={}
endSong=\bar "|."
startPart={}
endPart=\bar "||"
startIntro=\mark "Intro"
endIntro={}
startChords={
	%% this causes chords that do not change to disappear...
	\set chordChanges = ##t
	%% use my own chord exceptions
	\set chordNameExceptions = #myChordExceptions
}
endChords={}
</%def>

<%def name="clearVars()">
<%
	# these are variables passed to the template for its use
	attributes['copyrightvalstudy']='-- no copyright notice for study materials --'

	# these are the default values for the variables
	attributes['enteredby']=''
	attributes['maintainerEmail']=''
	attributes['footer']=''
	attributes['tagline']=''

	attributes['dedication']=''
	attributes['title']=''
	attributes['subtitle']=''
	attributes['subsubtitle']=''
	attributes['composer']=''
	attributes['style']=''
	attributes['piece']=''
	attributes['opus']=''
	attributes['poet']=''
	attributes['instrument']=''

	attributes['copyright']=''
	attributes['copyrightextra']=''

	attributes['completion']=''
	attributes['uuid']=''

	attributes['structure']=''
	attributes['idyoutube']=''
	attributes['idyoutuberemark']=''
	attributes['lyricsurl']=''

	attributes['doGuitar']=False
	attributes['doExtra']=False
	attributes['doPrep']=False
	attributes['doOwn']=False

	attributes['doChords']=False
	attributes['doVoice']=False
	attributes['doLyrics']=False
	attributes['doLyricsmore']=False
	attributes['doLyricsmoremore']=False
	attributes['render']=''
	attributes['heb']=False
	attributes['lyricsInMidi']=False
	attributes['doChordBars']=False
%>
</%def>

%% lets emit the definitions
${self.defs()}

%% lets always include guitar definitions
\include "predefined-guitar-fretboards.ly"

% if attributes['book']:
%% book header
\book {
	%% this is the title page
	\bookpart {
		\markup {
			\column {
				\null
				\null
				\null
				\null
				\null
				\null
				\null
				\null
				\null
				\null
				\fill-line { \fontsize #11 \bold "OpenBook" }
				\null
				\null
				\fill-line { \larger \larger \bold "An open source Jazz real book" }
				\null
				\null
				\null
				\fill-line { \huge \bold "Website: http://www.veltzer.net/openbook" }
				\null
				\fill-line { \huge \bold "Development: https://github.com/veltzer/openbook" }
				\null
				\fill-line { \huge \bold "Lead developer: Mark Veltzer <mark.veltzer@gmail.com>" }
				\null
				\fill-line { \huge \bold "Typesetting copyright: © 2011-${attributes['year']} Mark Veltzer <mark.veltzer@gmail.com>" }
				\null
				\fill-line { \huge \bold "Tune copyright: © belong to their respective holders" }
				\null
				\null
				\null
				\fill-line { \small "Git tag: ${attributes['gittag']}" }
				\fill-line { \small "Git describe: ${attributes['gitdesc']}" }
				\fill-line { \small "Git commits: ${attributes['gitcommits']}" }
				\fill-line { \small "Build date: ${attributes['date']}" }
				\fill-line { \small "Build user: ${attributes['username']}" }
				\fill-line { \small "Build host: ${attributes['hostname']}" }
				\fill-line { \small "Build machine: ${attributes['machine']}" }
				\fill-line { \small "Lilypond version: ${attributes['lilyver']}" }
				\fill-line { \small "Number of tunes: ${len(attributes['files'])}" }
				\null
				\null
				\null
			}
		}
		\score {
			<<
				\new Staff="Melody" {
					\new Voice="Voice"
					\relative c' {
						\time 4/4
						\key f \major
						\set fontSize = #-3
						f8 e f c r4 a'8 aes | a c, r e~ e g f e | g f a bes a f g ees
					}
				}
			>>
			\layout {
				#(layout-set-staff-size 35)
				indent = 2.6\cm
			}
		}
	}
% endif

% if attributes['toc']:
\markuplist \table-of-contents
%%\pageBreak
% endif

%% from here everything needs to go into a loop
% for file in attributes['files']:

% if attributes['parts']:
\bookpart {
% endif

%% this causes the variables to be defined...
${self.clearVars()}
<%include file="/${file}" args="part='Vars'"/>

%% now play with the variables that depend on language
<%
	if attributes['composer']=='':
		if attributes['poet']=='':
			add=''
		else:
			add=' / '+attributes['poet']
	else:
		if attributes['poet']=='':
			add=' / '+attributes['composer']
		else:
			if attributes['composer']==attributes['poet']:
				add=' / '+attributes['composer']
			else:
				add=' / '+attributes['composer']+', '+attributes['poet']
	attributes['tocname']=attributes['title']+add
%>
% if attributes['copyright']=='':
% if attributes['heb']:
<%
	attributes['copyright']=u'-- עיזרו לי למלא את שורת זכויות היוצרים הזו --'
%>
% else:
<%
	attributes['copyright']='-- help me fill it out this copyright notice --'
%>
% endif
% else:
% if attributes['heb']:
<%
	attributes['copyright']=u'זכויות יוצרים © '+attributes['copyright']
%>
% else:
<%
	attributes['copyright']=u'Copyright © '+attributes['copyright']
%>
% endif
% endif

%% calculate the tag line
% if attributes['heb']:
<%
	attributes['tagline']=u'תווי על ידי '+attributes['typesetter']+u', נבנה בתאריך'+attributes['date']+u', תימון על ידי lilypond '+attributes['lilyver']
%>
% else:
<%
	attributes['tagline']='Typeset by '+attributes['typesetter']+', Built at '+attributes['date']+', Engraved by lilypond '+attributes['lilyver']
%>
% endif

%% calculate the typesetby
% if attributes['heb']:
<%
	attributes['typesetby']=u'תווי על ידי '+attributes['typesetter']
%>
% else:
<%
	attributes['typesetby']='Typeset by '+attributes['typesetter']
%>
% endif

<%doc>
do all of these...
subsubtitleval=#"Built by Mark Veltzer <mark.veltzer@gmail.com> at esyscmd(date)"
subsubtitlevalheb=#"נבנה על ידי מרק ולצר mark.veltzer@gmail.com ב esyscmd(date)"
enteredbyval=#"Mark Veltzer"
enteredbyvalheb=#"מרק ולצר"
maintainerEmailval=#"mark.veltzer@gmail.com"
maintainerEmailvalheb=#"mark.veltzer@gmail.com"
footerval=#"this is the footer"
footervalheb=#"זה הטקסט התחתון"
</%doc>

<%doc>
% if attributes['doGuitar']:
\include "predefined-guitar-fretboards.ly"
% endif
</%doc>

% if attributes['toc']:
\tocItem \markup "${attributes['tocname']}"
% endif

<%doc>
%% emitting the header...
\header {
	enteredby="${attributes['enteredby']}"
	maintainerEmail="${attributes['maintainerEmail']}"
	footer="${attributes['footer']}"
	tagline="${attributes['tagline']}"

	dedication="${attributes['dedication']}"
	title="${attributes['title']}"
	subtitle="${attributes['subtitle']}"
	subsubtitle="${attributes['subsubtitle']}"
	composer="${attributes['composer']}"
	style="${attributes['style']}"
	piece="${attributes['piece']}"
	opus="${attributes['opus']}"
	poet="${attributes['poet']}"
	copyright="${attributes['copyright']}"
	copyrightextra="${attributes['copyrightextra']}"

	completion="${attributes['completion']}"
	uuid="${attributes['uuid']}"

	structure="${attributes['structure']}"
	idyoutube="${attributes['idyoutube']}"
	idyoutuberemark="${attributes['idyoutuberemark']}"
	lyricsurl="${attributes['lyricsurl']}"
}
</%doc>

<%
	# this block handles poet and composer. The idea is that the author of the tune
	# just fills in the raw poet/composer data and this takes care of the nice printing...
	if attributes['poet']==attributes['composer'] and attributes['poet']!='':
		if attributes['heb']:
			attributes['fullcomposer']=u'מילים ולחן: '+attributes['poet']
		else:
			attributes['fullcomposer']='Lyrics and Music by '+attributes['poet']
		attributes['fullpoet']=''
	else:
		if attributes['poet']=='':
			attributes['fullpoet']=''
		else:
			if attributes['heb']:
				attributes['fullpoet']=u'מלים: '+attributes['poet']
			else:
				attributes['fullpoet']='Lyrics by '+attributes['poet']
		if attributes['composer']=='':
			attributes['fullcomposer']=''
		else:
			if attributes['heb']:
				attributes['fullcomposer']=u'לחן: '+attributes['composer']
			else:
				attributes['fullcomposer']='Music by '+attributes['composer']
%>

%% taken from "/usr/share/lilypond/2.12.3/ly/titling-init.ly"
\markup {
	\column {
		\fill-line { "${attributes['dedication']}" }
		\override #'(baseline-skip . 3.5)
		\column {
			\huge \larger \bold
			\fill-line { \larger "${attributes['title']}" }
% if attributes['subtitle']!='':
			\fill-line { \large \smaller \bold \larger "${attributes['subtitle']}" }
% endif
			\fill-line { \smaller \bold "${attributes['subsubtitle']}" }
			\fill-line {
				"${attributes['fullpoet']}"
				"${attributes['fullcomposer']}"
			}
			\fill-line {
				"${attributes['piece']}"
				"${attributes['opus']}"
			}
		}
	}
}
\noPageBreak

% if attributes['doOwn']==False:

%% include the preparatory stuff, if there is any
% if attributes['doPrep']:
<%include file="/${file}" args="part='Prep'"/>
% endif

%% calculate the vars
<%
	Chords='Chords'+attributes['render']
	Voice='Voice'+attributes['render']
	Lyrics='Lyrics'+attributes['render']
	Lyricsmore='Lyricsmore'+attributes['render']
	Lyricsmoremore='Lyricsmoremore'+attributes['render']
%>

% if attributes['inline']==False:
%% lets emit the blocks
% if attributes['doChords']:
Chords=<%include file="/${file}" args="part=Chords"/>
% endif
% if attributes['doVoice']:
Voice=<%include file="/${file}" args="part=Voice"/>
% endif
% if attributes['doLyrics']:
Lyrics=<%include file="/${file}" args="part=Lyrics"/>
% endif
% if attributes['doLyricsmore']:
Lyricsmore=<%include file="/${file}" args="part=Lyricsmore"/>
% endif
% if attributes['doLyricsmoremore']:
Lyricsmoremore=<%include file="/${file}" args="part=Lyricsmoremore"/>
% endif
% endif

%% score for printing
\score {
	<<
% if attributes['doChords']:
\new ChordNames="Chords"
% if attributes['doChordBars']==True:
	%% this adds a bar engraver which does not always come with chords
	%% I didn'f find a way to put this with the chords themselves...
	\with {
		%% for lilypond 2.12
		%%\override BarLine #'bar-size = #4
		\override BarLine #'bar-extent = #'(-2 . 2)
		\consists "Bar_engraver"
	}
% else:
	\with {
		\remove "Bar_engraver"
	}
% endif
% if attributes['inline']:
	<%include file="/${file}" args="part=Chords"/>
% endif
% if attributes['inline']==False:
	\Chords
% endif
% endif
%% this thing will only engrave voltas. This is required to put the volta under the chords.
%% No great harm will happen if you don't put it, only the voltas will be above the chords.
%%\new Staff \with {
%%	\consists "Volta_engraver"
%%}
% if attributes['doVoice']:
\new Staff="Melody" {
\new Voice="Voice"
% if attributes['inline']:
	<%include file="/${file}" args="part=Voice"/>
% endif
% if attributes['inline']==False:
	\Voice
% endif
}
% endif
% if attributes['doLyrics']:
\new Lyrics="Lyrics" \lyricsto "Voice"
% if attributes['inline']:
	<%include file="/${file}" args="part=Lyrics"/>
% endif
% if attributes['inline']==False:
	\Lyrics
% endif
% endif
% if attributes['doLyricsmore']:
\new Lyrics="Lyrics" \lyricsto "Voice"
% if attributes['inline']:
	<%include file="/${file}" args="part=Lyricsmore"/>
% endif
% if attributes['inline']==False:
	\Lyricsmore
% endif
% endif
% if attributes['doLyricsmoremore']:
\new Lyrics="Lyrics" \lyricsto "Voice"
% if attributes['inline']:
	<%include file="/${file}" args="part=Lyricsmoremore"/>
% endif
% if attributes['inline']==False:
	\Lyricsmoremore
% endif
% endif
	>>
	\layout {
	}
}
% if attributes['midi']:
%% score for midi
\score {
	\unfoldRepeats
	<<
% if attributes['doChords']:
\new ChordNames="Chords"
% if attributes['inline']:
	<%include file="/${file}" args="part=Chords"/>
% endif
% if attributes['inline']==False:
	\Chords
% endif
% endif
% if attributes['doVoice']:
\new Staff="Melody" {
\new Voice="Voice"
% if attributes['inline']:
	<%include file="/${file}" args="part=Voice"/>
% endif
% if attributes['inline']==False:
	\Voice
% endif
}
% endif
% if attributes['lyricsInMidi']:
% if attributes['doLyrics']:
\new Lyrics="Lyrics" \lyricsto "Voice"
% if attributes['inline']:
	<%include file="/${file}" args="part=Lyrics"/>
% endif
% if attributes['inline']==False:
	\Lyrics
% endif
% endif
% if attributes['doLyricsmore']:
\new Lyrics="Lyrics" \lyricsto "Voice"
% if attributes['inline']:
	<%include file="/${file}" args="part=Lyricsmore"/>
% endif
% if attributes['inline']==False:
	\Lyricsmore
% endif
% endif
% if attributes['doLyricsmoremore']:
\new Lyrics="Lyrics" \lyricsto "Voice"
% if attributes['inline']:
	<%include file="/${file}" args="part=Lyricsmoremore"/>
% endif
% if attributes['inline']==False:
	\Lyricsmoremore
% endif
% endif
% endif
	>>
	\midi {
	}
}
% endif
% endif

% if attributes['doOwn']:
<%include file="/${file}" args="part='Own'"/>
% endif
% if attributes['doExtra']:
<%include file="/${file}" args="part='Extra'"/>
% endif

\noPageBreak
\markup \column {
	%% just a little space
	\null
	\fill-line {
		\smaller \smaller { "${attributes['copyright']}" }
	}
% if attributes['book']==True:
	\fill-line {
		\smaller \smaller { "${attributes['typesetby']}" }
	}
% endif
% if attributes['book']==False:
	\fill-line {
		\smaller \smaller { "${attributes['tagline']}" }
	}
% endif
}

% if attributes['toc']:
% endif

% if attributes['book']:
%% this is just a small space, maybe we should replace this with a page break?
%% TODO: at the very end of the book this should not appear. 
%%\markup {
%%	\null
%%	\null
%%}
% if attributes['parts']:
}
% else:
\pageBreak
% endif
% endif

% endfor

% if attributes['book']:
%% book footer
}
% endif
